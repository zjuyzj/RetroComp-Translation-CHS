0
00:00:5,000 --> 00:00:10,000
The 8Bit Guy：Commodore计算器修复 翻译：某科学的小姚同志

1
00:00:12,060 --> 00:00:14,910
大家好，欢迎收看这一集的The 8-Bit Guy。

2
00:00:14,910 --> 00:00:21,189
好的，上个月我从David Leech那里收到了一件非常慷慨的老式Commodore计算器的捐赠品。

3
00:00:21,189 --> 00:00:24,990
在这之前，我还没有修理过计算器，不过我手上的这台现在不工作了。

4
00:00:24,990 --> 00:00:28,999
如果这玩意不是贴着Commodore的商标，我才不会管它是好是坏呢。

5
00:00:28,999 --> 00:00:33,710
当然在我看来，它有一些历史感了。

6
00:00:33,710 --> 00:00:38,320
接下来我要把它拆开，看看我们是否能修好它。

7
00:00:38,320 --> 00:00:41,480
Commodore在生产电脑之前是一个计算器公司。

8
00:00:41,480 --> 00:00:46,940
我认为它在1972年左右生产，上面是有一点脏不过外形还好。

9
00:00:46,940 --> 00:00:53,100
然而如你所见，当我把它插上电源并开机，它没有任何反应。

10
00:00:53,100 --> 00:00:57,050
目前这个产品不能选择从电池供电，

11
00:00:57,050 --> 00:00:58,050
只能从120V交流插座取电。

12
00:00:58,050 --> 00:01:01,690
所以，我将继续拆解，

13
00:01:01,690 --> 00:01:03,150
但愿它只有内部电源供应上的一些小问题。

14
00:01:03,150 --> 00:01:08,680
好吧，这是一块非常有趣的电路板，它所有的线路看上去都是手绘的。

15
00:01:08,680 --> 00:01:11,960
我习惯于看计算机自动化的布线。

16
00:01:11,960 --> 00:01:16,630
你能从板子另一面这些元件里确切地辩认出这个28脚双列直插（DIP）封装的芯片。

17
00:01:16,630 --> 00:01:20,990
这儿有一个保险丝，和变压器一起都有可能是故障的元凶。

18
00:01:20,990 --> 00:01:23,750
然而，这一面没有多少可以看的东西。

19
00:01:23,750 --> 00:01:27,110
在我做进一步处理之前，

20
00:01:27,110 --> 00:01:28,439
我应该用我的万用表通断档测试一下保险丝。

21
00:01:28,439 --> 00:01:30,139
看上去保险丝是好的。

22
00:01:30,139 --> 00:01:33,639
所以，我继续移除了主板。

23
00:01:33,639 --> 00:01:37,130
这儿有几个平口螺丝钉，但紧接着有点麻烦。

24
00:01:37,130 --> 00:01:40,729
这里有几个小六角螺丝，但我没有这么小的扳手。

25
00:01:40,729 --> 00:01:44,219
我要么花接下来的三天时间来找一个合适的扳手，

26
00:01:44,219 --> 00:01:46,020
要么让尖嘴钳来胜任这个工作。

27
00:01:46,020 --> 00:01:47,929
并且这看起来可行。

28
00:01:47,929 --> 00:01:50,789
这里还有一些小螺丝。

29
00:01:50,789 --> 00:01:54,590
好了，现在我们能看到板子的这一面了。

30
00:01:54,590 --> 00:01:59,450
值得注意的是，这些泡沫简直是一戳就碎。

31
00:01:59,450 --> 00:02:03,459
看上去这个计算器的核心是一片德州仪器（TI）的芯片。

32
00:02:03,459 --> 00:02:06,049
这太正常不过，因为我知道Commodore在早期从他们那里进货。

33
00:02:06,049 --> 00:02:10,008
如果你曾经读过Jack Tramiel（Commodore的创始人）写的任何一个文档, 

34
00:02:10,008 --> 00:02:14,840
他最喜闻乐道的事就是TI想要提高他们卖给Commodore的芯片的价格，

35
00:02:14,840 --> 00:02:18,760
好让Commodore在计算器行业的竞争中失利。

36
00:02:18,760 --> 00:02:24,680
所以，Commodore不得不做的一件事就是

37
00:02:24,680 --> 00:02:25,709
收购他们自己的芯片设计公司――MOS Technologies。

38
00:02:25,709 --> 00:02:31,489
有趣的是几年后当TI想介入个人电脑（PC）市场的时候，

39
00:02:31,489 --> 00:02:34,989
Commodore已经占据了市场。

40
00:02:34,989 --> 00:02:40,129
是时候改造一下这些随处可见的海绵了。

41
00:02:40,129 --> 00:02:42,982
目前要做的是把这些东西装回去，

42
00:02:42,982 --> 00:02:44,930
并用万用表测量一番，检查一下电压是否正常。

43
00:02:44,930 --> 00:02:49,079
一个好消息是他们在板子上标注了很多信息，

44
00:02:49,079 --> 00:02:52,950
包括几种不同的额定电压。

45
00:02:52,950 --> 00:02:56,730
测量以后，我的却发现电压测量值很接近上面标注的理论值。

46
00:02:56,730 --> 00:03:00,400
所以我不能完全确定它为什么不能正常工作。

47
00:03:00,400 --> 00:03:04,640
不过紧接着，我注意到计算器有莫名其妙地恢复工作了。

48
00:03:04,640 --> 00:03:06,720
太好了，就应该是这样。

49
00:03:06,720 --> 00:03:11,880
然而我却发现有一些按键是好的，有一些则彻底不能工作，

50
00:03:11,880 --> 00:03:13,530
又有一些则时好时坏。

51
00:03:13,530 --> 00:03:17,230
我首先想要确定的是这是机械故障

52
00:03:17,230 --> 00:03:23,110
如按键本身的问题，还是电路故障如线路、电阻等等。

53
00:03:23,110 --> 00:03:26,440
也有可能是芯片本身坏了，

54
00:03:26,440 --> 00:03:27,440
这就彻底没法修复了。

55
00:03:27,440 --> 00:03:31,129
接下来我想做的第一件事就是看看我能否找到

56
00:03:31,129 --> 00:03:32,799
之前一直找不到的这种计算器的电路原理图。

57
00:03:32,799 --> 00:03:37,159
但是，我的确找到了德州仪器的主芯片的引脚排布图。

58
00:03:37,159 --> 00:03:41,540
这是我找到的信息，如果你对电子不熟悉的话

59
00:03:41,540 --> 00:03:43,359
它看起来就有点像古埃及的象形文字。

60
00:03:43,359 --> 00:03:48,709
我在我的频道最喜欢做的事之一就是想大家解释这些东西的原理

61
00:03:48,709 --> 00:03:49,709
以便你们更容易地理解。

62
00:03:49,709 --> 00:03:52,120
来看一看我是否能讲明白这些东西。

63
00:03:52,120 --> 00:03:57,019
这是一个28脚的芯片，但我们只关心按键的输入连线。

64
00:03:57,019 --> 00:03:58,650
它们有11条。

65
00:03:58,650 --> 00:04:02,299
然而你却发现这儿有超过11个的按键。

66
00:04:02,299 --> 00:04:06,541
还要留心右上角这个多功能切换开关，

67
00:04:06,541 --> 00:04:09,260
也就是说它还有几个额外的按键。

68
00:04:09,260 --> 00:04:12,469
那么它是怎么用仅仅11条输入线来识别所有这些按键的呢？

69
00:04:12,469 --> 00:04:14,030
事实上，它使用了一个按键矩阵。

70
00:04:14,030 --> 00:04:15,700
这张图说明了它是怎样工作的。

71
00:04:15,700 --> 00:04:20,209
这里有标着KN（Numbers）的四条线，

72
00:04:20,209 --> 00:04:22,919
用于数字键盘区的0-9的数字键。

73
00:04:22,919 --> 00:04:24,750
KO（Operaters）线对应操作键盘区，

74
00:04:24,750 --> 00:04:27,260
包括加法、减法、乘法、除法键。

75
00:04:27,260 --> 00:04:32,410
而KP（Positions）线用于键盘位置区，这和这个小滑动开关有关。

76
00:04:32,410 --> 00:04:37,220
最后是KQ线，我并不知道Q代表什么意思，

77
00:04:37,220 --> 00:04:38,310
不过它只控制这一个锁定键。

78
00:04:38,310 --> 00:04:41,389
这里标注的的蓝色线是输入线，

79
00:04:41,389 --> 00:04:43,520
而其他的四条红色线是输出线。

80
00:04:43,520 --> 00:04:47,860
现在让我用慢动作来向你解释每秒钟执行了成百上千次的操作。

81
00:04:47,860 --> 00:04:51,300
芯片会循环向这四条线发送高电平脉冲信号（按键扫描）。

82
00:04:51,300 --> 00:04:56,030
当你恰巧按下了一个键，以数字3为例，这会将KN线和D3线连通。

83
00:04:56,030 --> 00:05:00,060
当扫描着的脉冲信号经过KN线时，这个连接将会被检测到，

84
00:05:00,060 --> 00:05:02,139
芯片就会知道你按的是数字3键。

85
00:05:02,139 --> 00:05:05,780
接下来我要做的是标出所有能工作的按键。

86
00:05:05,780 --> 00:05:07,830
这些绿色的键是完全能工作的，

87
00:05:07,830 --> 00:05:12,370
橙色的是时好时坏的，红色的是完全不能工作的。

88
00:05:12,370 --> 00:05:15,740
我要做的下一件事是尝试分析出

89
00:05:15,740 --> 00:05:17,530
按键损坏的原因。

90
00:05:17,530 --> 00:05:19,280
以数字2键为例，

91
00:05:19,280 --> 00:05:23,690
它分别依赖于KN线和D2线来工作，

92
00:05:23,690 --> 00:05:28,210
如果其中任何一条线有问题，数字2键就不能工作，

93
00:05:28,210 --> 00:05:30,600
并且会影响到其他的按键。

94
00:05:30,600 --> 00:05:34,990
举个例子，如果D2线断了，它同样会影响到乘法键

95
00:05:34,990 --> 00:05:36,069
和滑动开关的设置。

96
00:05:36,069 --> 00:05:41,410
因为乘法键同样不能工作，

97
00:05:41,410 --> 00:05:42,410
所以可以确定D2线有电路问题。

98
00:05:42,410 --> 00:05:45,900
如果KN线坏了，那么计算器上所有的数字键都会不能用。

99
00:05:45,900 --> 00:05:48,120
所以我们可以假定KN线是好的。

100
00:05:48,120 --> 00:05:52,880
但是这不能解释所有问题例如数字9键和0键是好的，

101
00:05:52,880 --> 00:05:55,569
但CE键和C键却不能工作。

102
00:05:55,569 --> 00:05:58,770
我觉得我应该尝试去做的下一件事就是用一条导线

103
00:05:58,770 --> 00:06:02,729
人为地连接芯片的引脚看看能否输入数字2。

104
00:06:02,729 --> 00:06:04,590
无疑我做到了。

105
00:06:04,590 --> 00:06:06,979
所以我们确定了芯片本身是好的。

106
00:06:06,979 --> 00:06:11,130
事实上，我能够输入任何一个我想输的数字。

107
00:06:11,130 --> 00:06:14,870
我把电路板翻了个面，开始检查线路

108
00:06:14,870 --> 00:06:19,389
在芯片和每个按键之间的导电部分是否有裂痕，结果没有发现。

109
00:06:19,389 --> 00:06:23,580
这就意味着这一定是按键本身的问题。

110
00:06:23,580 --> 00:06:26,810
这些按键有个问题就是它们使用的安装在板子上的方式

111
00:06:26,810 --> 00:06:29,630
决定了我们需要破坏性拆解。

112
00:06:29,630 --> 00:06:34,009
所以，我唯一的希望就是我能从上面拆下这些开关。

113
00:06:34,009 --> 00:06:37,569
这些海绵马上就要碎了，所以我去掉了它们。

114
00:06:37,569 --> 00:06:40,990
我认为它们唯一的作用就是能让按键时发出的声音小一点。

115
00:06:40,990 --> 00:06:45,169
如果它们很有用的话我也能做出替代品。

116
00:06:45,169 --> 00:06:49,240
好吧，我不确定我是否能修好它，

117
00:06:49,240 --> 00:06:50,530
但这将会是一次有趣的学习体验。

118
00:06:50,530 --> 00:06:53,930
在我看来，我不会把事情搞得更糟，

119
00:06:53,930 --> 00:06:58,990
同时，我在eBay上看到一款类似的计算器卖25美元，所以这个也不是特别的贵。

120
00:06:58,990 --> 00:07:03,479
我会从数字2的按钮开始操作，因为我知道它彻底坏了。

121
00:07:03,479 --> 00:07:07,720
我不确定这些键帽能否掉出来，

122
00:07:07,720 --> 00:07:09,340
不过慢慢地撬，我成功地把它拆了下来。

123
00:07:09,340 --> 00:07:14,610
令人吃惊的是，我发现里面有一个覆盖着很多的碎海绵的弹簧。

124
00:07:14,610 --> 00:07:19,669
我觉着可能是弹簧里面卡的一小块海绵让按键变得僵硬。I

125
00:07:19,669 --> 00:07:22,900
并且你可以看见每个海绵都掉落了很多残渣。

126
00:07:22,900 --> 00:07:27,520
我想看看我是否能碰到那里，

127
00:07:27,520 --> 00:07:28,520
一阵努力过后，我做到了。

128
00:07:28,520 --> 00:07:31,520
所以可以确定按键就是故障的元凶。

129
00:07:31,520 --> 00:07:36,310
看样子这些小金属在底部起接触作用，

130
00:07:36,310 --> 00:07:38,860
我小心地把它们取下来。

131
00:07:38,860 --> 00:07:42,310
现在你能看到当你按下这片金属后，

132
00:07:42,310 --> 00:07:44,560
它会把金属环和中间的引脚导通。

133
00:07:44,560 --> 00:07:48,000
我把这些渣子吹了出来。

134
00:07:48,000 --> 00:07:52,620
我想清理一下里面的铜片，

135
00:07:52,620 --> 00:07:56,080
但它的位置不方便使用像醋、小苏打这些化学试剂来清理上面的氧化物。

136
00:07:56,080 --> 00:07:59,900
我不想让任何液体流下去，因为它不能很快地自行挥发。

137
00:07:59,900 --> 00:08:03,460
我尝试用牙刷来清理，但不太行。

138
00:08:03,460 --> 00:08:06,990
最终我意识到我可以使用螺丝刀和蘸了酒精的纸巾。

139
00:08:06,990 --> 00:08:11,789
我冲洗了一下弹簧，

140
00:08:11,789 --> 00:08:12,789
用牙刷尽量除去里面的旧海绵。

141
00:08:12,789 --> 00:08:16,840
我不确定海绵是否是必须的但我很快就能找到新的。

142
00:08:16,840 --> 00:08:21,360
我把金属片和弹簧装回去做个测试。

143
00:08:21,360 --> 00:08:25,419
我不知道这素材怎么回事。

144
00:08:25,419 --> 00:08:26,419
我原本测试了数字2键，它也工作了。

145
00:08:26,419 --> 00:08:30,879
所以我决定继续，对剩余的按键重复上述过程。

146
00:08:30,879 --> 00:08:49,310
其他的按键也都能工作了。

147
00:08:49,310 --> 00:08:57,720
我需要做一个裸机的按键最小化测试。

148
00:08:57,720 --> 00:08:59,010
（安装尽量少的部件）

149
00:08:59,010 --> 00:09:03,959
看样子都工作了，

150
00:09:03,959 --> 00:09:04,959
这意味着最终我们可以重新安装这些部件了。

151
00:09:04,959 --> 00:09:08,140
不幸的是，当我把它们装回去之后，一个按键都不能工作了。

152
00:09:08,140 --> 00:09:12,880
我怀疑其中的一个键像你按着它一样永久地接触到了下面地触点。

153
00:09:12,880 --> 00:09:17,310
由于这款计算器设计时一次只能检测一个键，

154
00:09:17,310 --> 00:09:18,310
这就导致了现在的问题。

155
00:09:18,310 --> 00:09:22,180
幸运的是，我能够运用我学到的这个芯片的版图的知识，

156
00:09:22,180 --> 00:09:24,959
使用万用表找出是哪个键在捣鬼。

157
00:09:24,959 --> 00:09:26,980
结果发现是数字8键。

158
00:09:26,980 --> 00:09:32,160
回来看这个键帽，我原来把弹簧压得太紧了。

159
00:09:32,160 --> 00:09:36,320
它接触的“太好了”，

160
00:09:36,320 --> 00:09:40,190
所以我拉伸了一下弹簧以给键帽更大的力，结果这个力又太大了。

161
00:09:40,190 --> 00:09:43,720
于是我稍稍弯曲这个小金属片，

162
00:09:43,720 --> 00:09:46,740
这样一来就需要更大的力来让它回复平的状态。

163
00:09:46,740 --> 00:09:50,540
又该测试了，这下子所有的按键都工作了。

164
00:09:50,540 --> 00:10:03,700
现在唯一要做的事就是把它清理干净，再把所有东西都重装回去。

165
00:10:03,700 --> 00:10:22,250
这就是最终结果。

166
00:10:22,250 --> 00:10:25,870
看上去好极了，用起来也很好。

167
00:10:25,870 --> 00:10:29,139
同样这下面还有可以随意调节

168
00:10:29,139 --> 00:10:31,019
计算器角度的支架。

169
00:10:31,019 --> 00:10:33,959
好了，就是这样。

170
00:10:33,959 --> 00:10:39,490
这确实是自1972年来

171
00:10:39,490 --> 00:10:41,079
我用过的最老的科技产品。

172
00:10:41,079 --> 00:10:46,190
事实上，它在我出生的三年前就生产了。

173
00:10:46,190 --> 00:10:50,480
仍然有个疑问：为什么我第一次收到它时它彻底不能工作，

174
00:10:50,480 --> 00:10:52,010
然后就突然好了？

175
00:10:52,010 --> 00:10:57,170
我只有一个理论来解释，就是那个保险丝。

176
00:10:57,170 --> 00:11:01,010
保险丝是好的。我把玩时做的唯一一件事就是

177
00:11:01,010 --> 00:11:02,560
把保险丝拆出来，再装回去。

178
00:11:02,560 --> 00:11:08,790
可能是因为铜触点被腐蚀了， and maybe just the act of taking

179
00:11:08,790 --> 00:11:14,680
这一拆一装为保险丝和插座间的接触

180
00:11:14,680 --> 00:11:15,680
创造了更好的条件。

181
00:11:15,680 --> 00:11:16,680
这只是我的猜想。

182
00:11:16,680 --> 00:11:18,180
这也是我所能思考的唯一一件事。

183
00:11:18,180 --> 00:11:24,040
当然，这个Commodore计算器是接下来

184
00:11:24,040 --> 00:11:26,810
Commodore计算机系列视频的一个引子。

185
00:11:26,810 --> 00:11:28,820
下一期视频是有关PET的。

186
00:11:28,820 --> 00:11:35,370
这个特别的家伙来自1977年，也就是这期的计算器生产后的几年。

187
00:11:35,370 --> 00:11:36,710
PET计算机不是我的。

188
00:11:36,710 --> 00:11:40,680
我从The Obsolete Geek那里把它借来，

189
00:11:40,680 --> 00:11:41,720
它有原版的键盘和内置的磁盘驱动器。

190
00:11:41,720 --> 00:11:45,779
这一台是最近捐赠给我的，它在几年后生产，

191
00:11:45,779 --> 00:11:48,380
从它的实体键盘就能看出来。

192
00:11:48,380 --> 00:11:51,970
有趣的是这个键盘上的大部分按键都不能工作。

193
00:11:51,970 --> 00:11:55,820
所以，我维修这个有按键机械损坏的计算器是一个巧合，

194
00:11:55,820 --> 00:12:00,079
我很好奇地想看看，

195
00:12:00,079 --> 00:12:02,500
当我打开它的时候是否也有相似的问题。

196
00:12:02,500 --> 00:12:07,330
所以我这次维修所学将会有利于下一次维修。

197
00:12:07,330 --> 00:12:12,860
好吧，我们先把它包起来，期待下期PET的节目。

198
00:12:12,860 --> 00:00:00,000
感谢观看！

